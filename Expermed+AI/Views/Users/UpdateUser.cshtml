@model NewUserViewModel

@{
  ViewBag.Title = "Update User";
  ViewBag.pTitle = "Update User";
  ViewBag.pageTitle = "Update User";
  Layout = null;
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;

      
}


<!doctype html>
<html lang="en" data-layout="vertical" data-topbar="light" data-sidebar="light" data-sidebar-size="lg"
  data-sidebar-image="none" data-preloader="disable">

<head>
  <title></title>
  @await Html.PartialAsync("_title_meta")
  @await Html.PartialAsync("_head_css")
</head>

<body>
  <!-- Begin page -->
  <div id="layout-wrapper">
    @await Html.PartialAsync("_menu")

    <!-- ============================================================== -->
    <!-- Start right Content here -->
    <!-- ============================================================== -->

    <div class="main-content">
      <div class="page-content">
        <div class="container-fluid">
          <div class="position-relative mx-n4 mt-n4">
            <div class="profile-wid-bg profile-setting-img">
              <img src="~/assets/images/profile-bg.jpg" class="profile-wid-img" alt="">
              <div class="overlay-content">
                <div class="text-end p-3">
                  <div class="p-0 ms-auto rounded-circle profile-photo-edit">
                    <input id="profile-foreground-img-file-input" type="file" class="profile-foreground-img-file-input">

                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="row">
            <form asp-action="UpdateUser" asp-controller="Users" method="POST" class="row g-3 needs-validation" novalidate >
             <input asp-for="User.UserId" class="form-control" hidden />
              <div class="col-xxl-3">
                <div class="card mt-n5">
                  <div class="card-body p-4">
                    <div class="text-center">
                      <div class="profile-user position-relative d-inline-block mx-auto mb-4">
                       <img 
                       src="@(!string.IsNullOrEmpty(Model.User.ProfilePhoto64) ? Model.User.ProfilePhoto64 : Url.Content("~/assets/images/profile-bg.jpg"))"
                          class="rounded-circle avatar-xl img-thumbnail user-profile-image" alt="user-profile" >
                        <div class="avatar-xs p-0 rounded-circle profile-photo-edit">
                          <input id="profile-img-file-input" type="file" class="profile-img-file-input" name="ProfilePhoto" >
                          <label for="profile-img-file-input" class="profile-photo-edit avatar-xs">
                            <span class="avatar-title rounded-circle bg-light text-body">
                              <i class="ri-camera-fill"></i>
                            </span>
                          </label>
                        </div>
                      </div>
                      <h5 class="fs-16 mb-1">Select a profile photo</h5>
                    </div>
                  </div>
                </div>
                <!--end card-->
              </div>
              <!--end col-->
              <div class="col-xxl-9">
                <div class="card mt-xxl-n5">
                  <div class="card-header">
                    <ul class="nav nav-tabs-custom rounded card-header-tabs border-bottom-0">
                      <li class="nav-item">
                        <a class="nav-link active" data-bs-toggle="tab" href="#personalDetails" role="tab">
                          <i class="fas fa-home"></i> Personal Details
                        </a>
                      </li>
                    </ul>
                  </div>
                  <div class="card-body p-4">
                    <div class="tab-content">
                      <div class="tab-pane active" id="personalDetails" role="tabpanel">

                        <div class="row">
                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="profileSelect" class="form-label">Select profile</label>
                                <select class="form-control" id="profileSelect" name="UserProfileid" asp-for="User.profileSelect" data-choices data-choices-sorting-false required>
                                   @foreach (var profile in Model.Profiles)
                                   {
                                       <option value="@profile.ProfileId">@profile.ProfileName</option>
                                   }
                                </select>
                                <div class="invalid-feedback">
                                  PLEASE THIS FIELD IS REQUIRED
                                </div>
                            </div>
                          </div>

                        <!-- Contenedor del select de médicos -->
                            <div class="col-lg-6" id="doctorSelectContainer" style="display: none;"> <!-- Oculto por defecto -->
                               <div class="mb-3">
                                   <label for="doctorSelect" class="form-label">Select the doctor to assign the assistant to</label>
                                   <select class="form-control" id="doctorSelect" name="doctorSelect" data-choices data-choices-removeItem multiple >
                                       <!-- Médicos ya asignados (si los hay) -->
                                       @if (Model.User.Doctors != null)
                                       {
                                           @foreach (var assignedDoctor in Model.User.Doctors)
                                           {
                                               <option value="@assignedDoctor.DoctorId" selected>
                                                   Dr(a): @assignedDoctor.DoctorNames @assignedDoctor.DoctorSurnames (@assignedDoctor.DoctorSpecialtyName)
                                               </option>
                                           }
                                       }
                            
                                       <!-- Médicos disponibles -->
                                       @foreach (var availableDoctor in Model.Users)
                                       {
                                           <option value="@availableDoctor.UsersId">
                                               Dr(a): @availableDoctor.UserNames @availableDoctor.UserSurnames (@availableDoctor.UserSpecialty.SpecialityName)
                                           </option>
                                       }
                                   </select>
                                   <!-- Input oculto para enviar los IDs seleccionados -->
                                   <input type="hidden" id="selectedDoctorIds"  name="selectedDoctorIds">
                               </div>
                            </div>                                                  


                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="documentNumberInput" class="form-label">Document number</label>
                              <input type="text" class="form-control" name="UserDocumentNumber" value="@Model.User.DocumentNumber" id="documentNumberInput" placeholder="1759999999" required>
                              <div class="invalid-feedback">
                                PLEASE THIS FIELD IS REQUIRED
                              </div> 
                            </div>
                          </div>

                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="firstnameInput" class="form-label">First Name</label>
                              <input type="text" class="form-control" value="@Model.User.Names" name="UserNames" id="firstnameInput"
                                placeholder="Enter your firstname" required>
                                <div class="invalid-feedback">
                                  PLEASE THIS FIELD IS REQUIRED
                                </div>
                            </div>
                          </div>

                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="lastnameInput" class="form-label">Last Name</label>
                              <input type="text" class="form-control" id="lastnameInput"
                                placeholder="Enter your lastname"  value="@Model.User.Surnames" name="UserSurnames" required>
                                <div class="invalid-feedback">
                                  PLEASE THIS FIELD IS REQUIRED
                                </div>
                            </div>
                          </div>


                            <div class="col-lg-12">
                               <div class="mb-3">
                                   <label for="addressInput" class="form-label">Address</label>
                                   <div class="input-group">
                                       <!-- Input para ingresar la dirección -->
                                       <input type="text" id="addressInput" class="form-control" class="UserAddress" name="UserAddress" aria-label="Recipient's username" aria-describedby="button-addon2" placeholder="Escribe una dirección" value="@Model.User.Address" required>
                                       <div class="invalid-feedback">
                                         PLEASE THIS FIELD IS REQUIRED
                                       </div>
                                       <!-- Botón para mostrar el mapa -->
                                       <button class="btn btn-outline-success" type="button" id="mapButton"><i class="ri-map-pin-line"></i></button>
                                   </div>
                          
                                   <!-- Contenedor para el mapa que se generará dinámicamente -->
                                   <div id="map" style="display: none; height: 400px; margin-top: 15px;"></div>
                          
                                   <!-- Contenedor de sugerencias que se generará dinámicamente -->
                                   <div id="suggestions" class="suggestions-container" style="display: none;"></div>
                               </div>
                            </div>



                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="codeSenecytInput" class="form-label">Code Senecyt</label>
                              <input type="text" class="form-control" id="codeSenecytInput"
                                placeholder="Enter your Senecyt code" name="UserSenecytcode" value="@Model.User.SenecytCode" required>
                                <div class="invalid-feedback">
                                  PLEASE THIS FIELD IS REQUIRED
                                </div>
                            </div>
                          </div>

                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="phonenumberInput" class="form-label">Phone Number</label>
                              <input type="text" class="form-control" id="phonenumberInput"
                                placeholder="Enter your phone number +(1) 987 6543" name="UserPhone" value="@Model.User.Phone" required>
                                <div class="invalid-feedback">
                                  PLEASE THIS FIELD IS REQUIRED
                                </div>
                            </div>
                          </div>

                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="emailInput" class="form-label">Email Address</label>
                              <input type="email" class="form-control" name="UserEmail" id="emailInput" placeholder="Enter your email"
                                value="@Model.User.Email" required>
                                <div class="invalid-feedback">
                                 
                                 PLEASE THIS FIELD IS REQUIRED, OR IT IS NOT A VALID EMAIL
                                </div>
                            </div>
                          </div>

                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="specialtySelect" class="form-label">Select specialty</label>
                                   <select class="form-control" id="choices-single-no-sorting" name="UserSpecialtyid" asp-for="User.UserSpecialtyid" data-choices data-choices-sorting-false required> 
                                       @foreach (var specialities in Model.Specialties)
                                       {
                                               <option value="@specialities.SpecialityId">@specialities.SpecialityName</option>
                                       }
                                   </select>
                                   <div class="invalid-feedback">
                                    
                                    PLEASE THIS FIELD IS REQUIRED
                                   </div>
                            </div>
                             </div>
                            
                             <div class="col-lg-6">
                                   <div class="mb-3">
                                       <label for="stablishSelect" class="form-label">Select Country</label>
                                    <select class="form-control" id="countryId" name="UserCountryid"  asp-for="User.UserCountryid" data-choices data-choices-sorting-false required>
                                           @foreach (var countries in Model.Countries)
                                           {
                                            <option value="@countries.CountryId">@countries.CountryNationality</option>
                                           }
                                    </select>
                                    <div class="invalid-feedback">
                                     
                                     PLEASE THIS FIELD IS REQUIRED
                                    </div>
                                </div>
                            </div>

                          

                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="loginInput" class="form-label">Log-in</label>
                              <input type="text" class="form-control" id="loginInput" name="UserLogin" placeholder="nickname"
                                value="@Model.User.Login" required>
                                <div class="invalid-feedback">
                                 
                                 PLEASE THIS FIELD IS REQUIRED
                                </div>
                            </div>
                          </div>

                          <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="passwordInput" class="form-label">Password</label>
                              <input type="password" class="form-control" id="passwordInput"
                                placeholder="Set the old password, or replace it with a new one" name="UserPassword" required>
                                <div class="invalid-feedback">
                                  PLEASE THIS FIELD IS REQUIRED
                                </div> 
                            </div>
                          </div>


                                  <!--PARAMETROS DE TAXO-->
                                                     <div class="divider-with-text">
                                                         <span>Taxo Parameter Settings</span>
                                                     </div>
                                                     <div class="col-lg-6">
                            <div class="mb-3">
                              <label for="stablishSelect" class="form-label">Select establishment</label>
                                <select class="form-control" id="choices-single-no-sorting" asp-for="User.UserEstablishmentid" name="UserEstablishmentid" data-choices data-choices-sorting-false required> 
                                                                @foreach (var establishment in Model.Establishments)
                                                                {
                                         <option value="@establishment.EstablishmentId">@establishment.EstablishmentName</option>
                                                                }
                                </select>
                                <div class="invalid-feedback">

                                 PLEASE THIS FIELD IS REQUIRED
                                </div>
                            </div>
                          </div>

                          <div class="col-lg-6">
                                                            <div class="mb-3">
                                                                <label for="stablishSelect" class="form-label">Select the VAT percentage</label>
                                                             <select class="form-control" id="vatPercentageId" name="UserVatpercentageid" data-choices data-choices-sorting-false required>
                                                                @foreach (var percentage in Model.VatBillings)
                                                                {
                                                                             <option value="@percentage.VatbillingId">@percentage.VatbillingPercentage</option>
                                                                }
                                                                </select>
                                                                 <div class="invalid-feedback">
                                                                  PLEASE THIS FIELD IS REQUIRED
                                                                 </div>
                                                            </div>
                                                         </div>
                                                        <div class="col-lg-4">
                                                          <div class="mb-3">
                                                            <label for="xkeyInput" class="form-label">X-KEY of the user in taxo</label>
                                                            <input type="text" class="form-control" id="xkeyInput" name="UserXkeytaxo" placeholder="provided by taxo"
                                                             value="@Model.User.XKeyTaxo" required>
                                                             <div class="invalid-feedback">
                                                              
                                                              PLEASE THIS FIELD IS REQUIRED
                                                             </div>
                                                          </div>
                                                        </div>
                      

                          <div class="col-lg-4">
                            <div class="mb-3">
                              <label for="xpassInput" class="form-label">X-PASS of the user in taxo</label>
                              <input type="text" class="form-control" id="xpassInput"  name="UserXpasstaxo" placeholder="provided by taxo"
                               value="@Model.User.XPassTaxo" required>
                               <div class="invalid-feedback">
                                
                                PLEASE THIS FIELD IS REQUIRED
                               </div>
                            </div>
                          </div>

                          <div class="col-lg-4">
                            <div class="mb-3">
                              <label for="sequentialBillingInput" class="form-label">Sequential user billing in
                                taxo</label>
                              <input type="text" class="form-control" id="sequentialBillingInput"
                                placeholder="provided by taxo" value="@Model.User.SequentialBilling"  name="UserSequentialBilling" required>
                                <div class="invalid-feedback">
                                 
                                 PLEASE THIS FIELD IS REQUIRED
                                </div>
                            </div>
                          </div>

                         <div class="col-lg-4">
                             <div class="mb-3">
                                 <label for="formFile2" class="form-label">Digital signature</label>
                                 <input class="form-control" type="file" id="digitalSignature" name="UserDigitalsignature">
                             </div>
                         </div> 
                          
                         <div class="divider-with-text">
                              <span>Settings Office Hours</span>
                          </div>

                         <!--Horarios de atencion-->
                            <div class="col-lg-4">
                             <div class="mb-3">
                                 <label for="startHour" class="form-label">Star Hour</label>
                                 <input class="form-control" value="@Model.User.StartTime" type="time" id="startHour" name="StartTime" required>
                                 <div class="invalid-feedback">
                                  
                                  PLEASE THIS FIELD IS REQUIRED
                                 </div>
                             </div>
                         </div> 
                         <div class="col-lg-4">
                               <div class="mb-3">
                                   <label for="endHour" class="form-label">End Hour</label>
                                   <input class="form-control" type="time" id="endHour"value="@Model.User.EndTime" name="EndTime" required>
                                   <div class="invalid-feedback">
                                    
                                    PLEASE THIS FIELD IS REQUIRED
                                   </div>
                               </div>
                           </div>    
                           <div class="col-lg-4">
                               <div class="mb-3">
                                   <label for="endHour" class="form-label">Appointment Interval</label>
                                   <input class="form-control" type="number" id="appointmentInterval" value="@Model.User.AppointmentInterval" name="AppointmentInterval" required>
                                   <div class="invalid-feedback">
                                    
                                    PLEASE THIS FIELD IS REQUIRED
                                   </div>
                               </div>
                           </div> 
                             <!--Observacion y Dias de Trabajo-->  
       
                                    <!--Observacion y Dias de Trabajo-->  

                          <div class="col-lg-6" id="workDaysSelectContainer"> 
                             <div class="mb-3">
                                 <label for="daysSelect" class="form-label">Select work days</label>
                                 <select class="form-control" id="daysSelect" name="WorksDays" data-choices data-choices-removeItem multiple>
                                     @{
                                         // Convertir los días guardados a una lista
                                         var selectedDays = Model.User.WorkDays?.ToLower().Split(',', StringSplitOptions.RemoveEmptyEntries) ?? new string[0];
                                     }
                                     <option value="monday" selected>Monday</option>
                                     <option value="tuesday" selected>Tuesday</option>
                                     <option value="wednesday" selected>Wednesday</option>
                                     <option value="thursday" selected>Thursday</option>
                                     <option value="friday" selected>Friday</option>
                                     <option value="saturday" selected>Saturday</option>
                                     <option value="sunday" selected>Sunday</option>
                                 </select>
                                 <!-- Input oculto para enviar los días seleccionados -->
                                 <input type="hidden" id="selectedWorkDays" name="selectedWorkDays" value="@Model.User.WorkDays">
                             </div>
                           </div>
                                                   <div class="col-xxl-5 col-md-12">
                                                       <div>
                                                           <label for="UserDescription" class="form-label">Doctor's description</label>
                                                           <textarea class="form-control" type="text" id="UserDescription" name="UserDescription" rows="3" value="@Model.User.UserDescription" required></textarea>
                                                            <div class="invalid-feedback">
                                                             PLEASE THIS FIELD IS REQUIRED
                                                            </div>
                                                       </div>
                                                   </div>  

                 
                                      
                          <div class="col-lg-12" style="padding-top: 3px">
                            <div class="hstack gap-2 justify-content-end">
                              <button type="submit" class="btn btn-primary">
                                <i class="ri-user-add-line"></i> Update
                              </button>

                              <!-- Grids in modals -->

                              <a type="button" href="@Url.Action("UserList", "Users")" class="btn btn-soft-secondary">
                                  <i class=" ri-arrow-go-back-line"></i> Cancel
                              </a>
                            </div>
                          </div>
                          <!--end col-->
                        </div>
                        <!--end row-->
            </form>


          </div>
          <!--end tab-pane-->
        </div>
      </div>
    </div>
  </div>
  <!--end col-->
  </div>

  <!--end row-->
  </div>
  </div>
  @* @await Html.PartialAsync("_footer") *@
  </div>
  </div>
  <!-- END layout-wrapper -->
  @* @await Html.PartialAsync("_customizer") *@
  @await Html.PartialAsync("_vendor_scripts")

  <!-- profile-setting init js -->
  <script src="~/assets/js/pages/profile-setting.init.js"></script>

  <!-- App js -->
  <script src="~/assets/js/app.js"></script>

    @if (!string.IsNullOrEmpty(successMessage))
    {
            <script>
                Swal.fire({
                    title: '¡Success!',
                    text: '@successMessage',
                    icon: 'success',
                    confirmButtonText: 'OK'
                });
            </script>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
            <script>
                Swal.fire({
                    title: 'Success',
                    text: '@errorMessage',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            </script>
    }
  <script>
    document.addEventListener("DOMContentLoaded", function () {
    const profileSelect = document.getElementById("profileSelect");
    const doctorSelectContainer = document.getElementById("doctorSelectContainer");

    // Función para actualizar la visibilidad del contenedor de médicos
    function updateDoctorSelectContainer() {
        const selectedValue = profileSelect.value;
        if (selectedValue === "3") { // Mostrar si el ProfileId es 3
            doctorSelectContainer.style.display = "block";
        } else { // Ocultar en caso contrario
            doctorSelectContainer.style.display = "none";
        }
    }

    // Validación inicial al cargar la página
    updateDoctorSelectContainer();

    // Escuchar cambios en el select de perfiles
    profileSelect.addEventListener("change", updateDoctorSelectContainer);
});

document.addEventListener('DOMContentLoaded', function () {
    const doctorSelect = document.getElementById('doctorSelect');
    const selectedDoctorIdsInput = document.getElementById('selectedDoctorIds');
    
    // Función para actualizar los IDs seleccionados
    function updateSelectedDoctorIds() {
        const selectedOptions = Array.from(doctorSelect.selectedOptions).map(option => option.value);
        selectedDoctorIdsInput.value = selectedOptions.join(',');
    }

    // Actualiza el input oculto cada vez que cambie la selección
    doctorSelect.addEventListener('change', updateSelectedDoctorIds);

    // Llamar inicialmente para establecer los IDs de los médicos ya seleccionados
    updateSelectedDoctorIds();
});

document.addEventListener('DOMContentLoaded', function () {
   const daysSelect = document.getElementById('daysSelect');
   const selectedWorkDaysInput = document.getElementById('selectedWorkDays');

   // Función para actualizar los días seleccionados
   function updateSelectedWorkDays() {
       const selectedOptions = Array.from(daysSelect.selectedOptions).map(option => option.value);
       selectedWorkDaysInput.value = selectedOptions.join(',');
   }

   // Actualiza el input oculto cada vez que cambie la selección
   daysSelect.addEventListener('change', updateSelectedWorkDays);

   // Llamar inicialmente para establecer los días de trabajo al cargar la página
   updateSelectedWorkDays();
});
    function selectHour(hour) {
      // Colocar la hora seleccionada en el input
      document.getElementById('AppointmentHour').value = hour;

      // Cerrar el modal de horas
      var modalHour = bootstrap.Modal.getInstance(document.getElementById('myModalHour'));
      modalHour.hide();

      // Volver a mostrar el modal principal
      var modalGrid = bootstrap.Modal.getInstance(document.getElementById('exampleModalgrid'));
      if (!modalGrid) {
        modalGrid = new bootstrap.Modal(document.getElementById('exampleModalgrid'));
      }
      modalGrid.show();
    }







    // Llamar al API para obtener las horas disponibles
async function fetchAvailableHours(userId, date) {
    try {
        const response = await fetch(`/api/appointment/available-hours?userId=${userId}&date=${date}`);
        if (response.ok) {
            const hours = await response.json();
            updateAvailableHoursModal(hours);
        } else {
            alert("No available hours found.");
        }
    } catch (error) {
        console.error("Error fetching available hours:", error);
        alert("An error occurred while fetching available hours.");
    }
}

// Actualizar el contenido del modal con las horas disponibles
function updateAvailableHoursModal(hours) {
    const modalBody = document.querySelector("#myModalHour .modal-body .row");
    modalBody.innerHTML = ""; // Limpiar contenido anterior

    hours.forEach(hour => {
        const col = document.createElement("div");
        col.classList.add("col-4");
        col.innerHTML = `
            <button class="btn btn-outline-primary w-100" onclick="selectHour('${hour}')">
                ${hour}
            </button>`;
        modalBody.appendChild(col);
    });
}

// Seleccionar una hora y actualizar el campo en el primer modal
function selectHour(hour) {
    document.getElementById("AppointmentHour").value = hour;
    const modal = bootstrap.Modal.getInstance(document.getElementById("myModalHour"));
    modal.hide();
}

// Manejar el botón de "View Hours Availables" en el primer modal
function handleViewAvailableHours() {
    const userId = document.getElementByID("UserId"); // Cambiar por el valor real del usuario (obtener dinámicamente)
    const date = document.getElementById("exampleInputdate").value;

    if (!date) {
        alert("Please select a date.");
        return;
    }

    fetchAvailableHours(userId, date);
}





  </script>

 
</body>

</html>
